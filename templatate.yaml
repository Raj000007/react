Parameters:
  BucketName:
    Type: String
    Description: Name for the S3 bucket
    Default: react-app-bucket-unique

Resources:
  ReactAppBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: react-app-bucket-unique
      AccessControl: PublicReadWrite  # This enables ACLs for the bucket and objects
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        IgnorePublicAcls: false
        BlockPublicPolicy: false
        RestrictPublicBuckets: false

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: react-app-bucket-unique
      PolicyDocument:
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: '*'
            Action: "s3:GetObject" 
            Resource: !Sub "arn:aws:s3:::${BucketName}/*"

  EnforceObjectOwnership:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ReactAppBucket
      PolicyDocument:
        Statement:
          - Sid: EnforceObjectOwnership
            Effect: Deny
            Principal: '*'
            Action: "s3:PutObject"
            Resource: !Sub "arn:aws:s3:::${BucketName}/*"
            Condition:
              StringNotEquals:
                "s3:x-amz-acl": "bucket-owner-full-control"

Conditions:
  UseDefaultBucketName: !Equals react-app-bucket-unique


Outputs:
  WebsiteURL:
    Description: URL of the static website
    Value: !GetAtt ReactAppBucket.WebsiteURL
